apiVersion: apps/v1
kind: Deployment
metadata:
  name: ark-server
  labels:
    app: ark
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ark
  template:
    metadata:
      labels:
        app: ark
    spec:
      containers:
        - name: ark
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.service.ports.game.port }}
              protocol: {{ .Values.service.ports.game.protocol }}
            - containerPort: {{ .Values.service.ports.rcon.port }}
              protocol: {{ .Values.service.ports.rcon.protocol }}
            - containerPort: {{ .Values.service.ports.query.port }}
              protocol: {{ .Values.service.ports.query.protocol }}
          env:
            {{- range $key, $value := .Values.config.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
              {{- end }}
            - name: DISPLAY
              value: ""
          volumeMounts:
            - name: ark-data
              mountPath: /ark
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.ports.rcon.port }}
            initialDelaySeconds: 60
            timeoutSeconds: 5
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.ports.rcon.port }}
            initialDelaySeconds: 120
            timeoutSeconds: 5
      volumes:
        - name: ark-data
          hostPath:
            path: {{ .Values.persistence.hostPath }}
            type: DirectoryOrCreate
