apiVersion: apps/v1
kind: Deployment
metadata:
  name: ark-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ark-server
  template:
    metadata:
      labels:
        app: ark-server
    spec:
      containers:
        - name: ark
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.ports.asa }}
            - containerPort: {{ .Values.ports.rcon }}
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              echo "⏳ Attente de l'installation complète du serveur ARK..."
              while [ ! -f /home/steam/ARK/ShooterGame/Binaries/Win64/ArkAscendedServer.exe ]; do
                sleep 10
              done
              echo "✅ Serveur trouvé, lancement..."
              cd /home/steam/ARK/ShooterGame/Binaries/Win64
              wine ArkAscendedServer.exe "_WP?listen?SessionName=IceLauzDroken?Port=50001?MultiHome=0.0.0.0?ServerAdminPassword=adminpass?MaxPlayers=10" \
              -WinLiveMaxPlayers= -clusterid= -servergamelog -servergamelogincludetribelogs -ServerRCONOutputTribeLogs -NotifyAdminCommandsInChat -nosteamclient
          volumeMounts:
            - name: ark-data
              mountPath: /home/steam/ARK
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
      volumes:
        - name: ark-data
          hostPath:
            path: {{ .Values.persistence.path }}
            type: DirectoryOrCreate
