apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ark-server.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "ark-server.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ark-server.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ark-server.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 7777
      initContainers:
      - name: fix-permissions
        image: busybox:latest
        command:
          - sh
          - -c
          - |
            echo "üîß [InitContainer] D√©but du fix des permissions et nettoyage des fichiers lock..."
            echo "üìÅ Contenu initial de /home/pok/arkserver:"
            ls -al /home/pok/arkserver || echo "üö´ Dossier vide ou introuvable"

            echo "üßπ Suppression des fichiers lock..."
            rm -v -f /home/pok/arkserver/.steam/update.lock
            rm -v -f /home/pok/arkserver/.steam/steam.pid
            rm -v -f /home/pok/arkserver/.steam/steamapps/appmanifest_2430930.acf

            echo "üîê Fix des permissions sur /home/pok/arkserver..."
            chown -R 7777:7777 /home/pok/arkserver || echo "‚ö†Ô∏è Erreur lors du chown"

            echo "‚úÖ [InitContainer] Termin√©."
        volumeMounts:
          - name: ark-data
            mountPath: /home/pok/arkserver

      containers:
      - name: ark-server
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: game
          containerPort: {{ .Values.serverConfig.gamePort }}
          protocol: UDP
        - name: game-tcp
          containerPort: {{ .Values.serverConfig.gamePort }}
          protocol: TCP
        - name: rcon
          containerPort: {{ .Values.serverConfig.rconPort }}
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "ark-server.fullname" . }}-config
        - secretRef:
            name: {{ include "ark-server.fullname" . }}-secret
        volumeMounts:
        - name: ark-data
          mountPath: /home/pok/arkserver
        livenessProbe:
          tcpSocket:
            port: {{ .Values.serverConfig.rconPort }}
          initialDelaySeconds: 1200
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe:
          tcpSocket:
            port: {{ .Values.serverConfig.rconPort }}
          initialDelaySeconds: 1200
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
{{- if .Values.persistence.hostPath }}
      - name: ark-data
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: DirectoryOrCreate
{{- else }}
      - name: ark-data
        persistentVolumeClaim:
          claimName: {{ include "ark-server.fullname" . }}-pvc
{{- end }}
